// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NET___BioSentinela.Infrastructure.Context;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace BioSentinela___.NET.Migrations
{
    [DbContext(typeof(BioContext))]
    [Migration("20250606110555_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NET___BioSentinela.Domain.Entities.Alerta", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<string>("Created")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime>("DataCreated")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<DateTime>("DataUpdated")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Mensagem")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVARCHAR2(200)");

                    b.Property<Guid>("SensorId")
                        .HasColumnType("RAW(16)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<string>("Updated")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.HasIndex("SensorId");

                    b.ToTable("Alerta", (string)null);
                });

            modelBuilder.Entity("NET___BioSentinela.Domain.Entities.Regiao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<string>("Bioma")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVARCHAR2(200)");

                    b.Property<string>("Created")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime>("DataCreated")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<DateTime>("DataUpdated")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVARCHAR2(200)");

                    b.Property<string>("Updated")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable("Regiao", (string)null);
                });

            modelBuilder.Entity("NET___BioSentinela.Domain.Entities.Sensor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<string>("Created")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime>("DataCreated")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<DateTime>("DataUpdated")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Localizacao")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("NVARCHAR2(150)");

                    b.Property<Guid>("RegiaoId")
                        .HasColumnType("RAW(16)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)");

                    b.Property<string>("Updated")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.HasIndex("RegiaoId");

                    b.ToTable("Sensor", (string)null);
                });

            modelBuilder.Entity("NET___BioSentinela.Domain.Entities.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<string>("Created")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)");

                    b.Property<DateTime>("DataCreated")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<DateTime>("DataUpdated")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)");

                    b.Property<string>("Updated")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.HasKey("Id");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("NET___BioSentinela.Domain.Entities.Alerta", b =>
                {
                    b.HasOne("NET___BioSentinela.Domain.Entities.Sensor", "Sensor")
                        .WithMany("Alertas")
                        .HasForeignKey("SensorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sensor");
                });

            modelBuilder.Entity("NET___BioSentinela.Domain.Entities.Sensor", b =>
                {
                    b.HasOne("NET___BioSentinela.Domain.Entities.Regiao", "Regiao")
                        .WithMany("Sensors")
                        .HasForeignKey("RegiaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Regiao");
                });

            modelBuilder.Entity("NET___BioSentinela.Domain.Entities.Regiao", b =>
                {
                    b.Navigation("Sensors");
                });

            modelBuilder.Entity("NET___BioSentinela.Domain.Entities.Sensor", b =>
                {
                    b.Navigation("Alertas");
                });
#pragma warning restore 612, 618
        }
    }
}
